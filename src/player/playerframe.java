/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package player;

import jaco.mp3.player.MP3Player;
import java.awt.Dimension;
import java.awt.Font;
import java.io.File;
import java.nio.file.Paths;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.FloatControl;
import javax.sound.sampled.Line;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.Mixer;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author Hitesh
 */
public class playerframe extends javax.swing.JFrame {
    MP3Player player;
    File songFile;
    String currentDirectory="home.user";

    String imagepath;
    boolean repeat=false;
    boolean windowcollapsed=false;
    int xMouse,yMouse;
    String  appName="MP3 Music Player";
    private final String currentPath;

    
    public playerframe() {
        initComponents();
        apptitle.setText(appName);
        songFile=new File("D:\\90s Evergreen Romantic (2017) (128 Kbps) - DownloadMing.SE\\90s Evergreen Romantic (2017) (128 Kbps)\\1.mp3");
        String FileName=songFile.getName();
        songNameDisplay.setText(FileName);
        player = mP3Player();
        player.addToPlayList(songFile);
         currentPath = Paths.get(".").toAbsolutePath().normalize().toString();
         imagepath="\\images";
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame2 = new javax.swing.JFrame();
        mainpanel = new javax.swing.JPanel();
        headerPanel = new javax.swing.JPanel();
        apptitle = new javax.swing.JLabel();
        settingbtn = new javax.swing.JLabel();
        quitbtn = new javax.swing.JLabel();
        songnamemainPanel = new javax.swing.JPanel();
        controlPanel = new javax.swing.JPanel();
        playbtn = new javax.swing.JLabel();
        openbtn = new javax.swing.JLabel();
        volumeupbtn = new javax.swing.JLabel();
        stopebtn = new javax.swing.JLabel();
        volumefullbtn = new javax.swing.JLabel();
        mutebtn = new javax.swing.JLabel();
        volumedownbtn = new javax.swing.JLabel();
        pausebtn = new javax.swing.JLabel();
        repeatbtn = new javax.swing.JLabel();
        songNameDisplay = new javax.swing.JLabel();

        jFrame2.setUndecorated(true);
        jFrame2.setResizable(false);

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 697, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 283, Short.MAX_VALUE)
        );

        setUndecorated(true);
        setResizable(false);

        mainpanel.setBackground(new java.awt.Color(0, 153, 153));

        headerPanel.setBackground(new java.awt.Color(0, 102, 102));

        apptitle.setBackground(new java.awt.Color(0, 153, 204));
        apptitle.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        apptitle.setText("APP TITLE");
        apptitle.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                apptitleMouseDragged(evt);
            }
        });
        apptitle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                apptitleMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                apptitleMousePressed(evt);
            }
        });

        settingbtn.setBackground(new java.awt.Color(0, 153, 204));
        settingbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player/images/settings.png"))); // NOI18N
        settingbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingbtnMouseClicked(evt);
            }
        });

        quitbtn.setBackground(new java.awt.Color(0, 153, 204));
        quitbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player/images/quit.png"))); // NOI18N
        quitbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quitbtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPanelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(apptitle, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(settingbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quitbtn)
                .addGap(8, 8, 8))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(headerPanelLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(quitbtn))
                    .addComponent(settingbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(apptitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        songnamemainPanel.setBackground(new java.awt.Color(0, 153, 153));

        javax.swing.GroupLayout songnamemainPanelLayout = new javax.swing.GroupLayout(songnamemainPanel);
        songnamemainPanel.setLayout(songnamemainPanelLayout);
        songnamemainPanelLayout.setHorizontalGroup(
            songnamemainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 695, Short.MAX_VALUE)
        );
        songnamemainPanelLayout.setVerticalGroup(
            songnamemainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 39, Short.MAX_VALUE)
        );

        controlPanel.setBackground(new java.awt.Color(0, 153, 153));

        playbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player/images/play.png"))); // NOI18N
        playbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playbtnMouseClicked(evt);
            }
        });

        openbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player/images/open.png"))); // NOI18N
        openbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                openbtnMouseClicked(evt);
            }
        });

        volumeupbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player/images/volume_up.png"))); // NOI18N
        volumeupbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                volumeupbtnMouseClicked(evt);
            }
        });

        stopebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player/images/stop.png"))); // NOI18N
        stopebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stopebtnMouseClicked(evt);
            }
        });

        volumefullbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player/images/volume_full.png"))); // NOI18N
        volumefullbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                volumefullbtnMouseClicked(evt);
            }
        });

        mutebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player/images/mute.png"))); // NOI18N
        mutebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mutebtnMouseClicked(evt);
            }
        });

        volumedownbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player/images/volume_down.png"))); // NOI18N
        volumedownbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                volumedownbtnMouseClicked(evt);
            }
        });

        pausebtn.setBackground(new java.awt.Color(0, 153, 153));
        pausebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player/images/pause.png"))); // NOI18N
        pausebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pausebtnMouseClicked(evt);
            }
        });

        repeatbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player/images/repeat.png"))); // NOI18N
        repeatbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                repeatbtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(repeatbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pausebtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stopebtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(openbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(volumedownbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(volumeupbtn)
                .addGap(6, 6, 6)
                .addComponent(volumefullbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mutebtn)
                .addGap(23, 23, 23))
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addComponent(playbtn)
                .addGap(0, 11, Short.MAX_VALUE))
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(openbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stopebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(volumedownbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(volumeupbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(volumefullbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mutebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(repeatbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pausebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        songNameDisplay.setBackground(new java.awt.Color(0, 153, 153));
        songNameDisplay.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        songNameDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        songNameDisplay.setText("PLAYING");

        javax.swing.GroupLayout mainpanelLayout = new javax.swing.GroupLayout(mainpanel);
        mainpanel.setLayout(mainpanelLayout);
        mainpanelLayout.setHorizontalGroup(
            mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainpanelLayout.createSequentialGroup()
                        .addComponent(songNameDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 671, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(songnamemainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainpanelLayout.setVerticalGroup(
            mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainpanelLayout.createSequentialGroup()
                        .addComponent(songnamemainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 12, Short.MAX_VALUE))
                    .addComponent(songNameDisplay, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 687, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(mainpanel, javax.swing.GroupLayout.PREFERRED_SIZE, 687, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 301, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(mainpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void playbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playbtnMouseClicked
        // TODO add your handling code here:
        
        player.play();
    }//GEN-LAST:event_playbtnMouseClicked

    private void pausebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pausebtnMouseClicked
        // TODO add your handling code here:
        player.pause();
    }//GEN-LAST:event_pausebtnMouseClicked

    private void stopebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopebtnMouseClicked
        // TODO add your handling code here:
        player.stop();
    }//GEN-LAST:event_stopebtnMouseClicked

    private void repeatbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_repeatbtnMouseClicked
        // TODO add your handling code here:
        if(repeat==false)
        {
            repeat=true;
            player.setRepeat(repeat);
            
            String image=currentPath+imagepath+"\\repeat_enabled.png";
            repeatbtn.setIcon(new ImageIcon(image));
        }
        else if(repeat==true)
        {
            repeat=false;
            player.setRepeat(repeat);
            
            String image=currentPath+imagepath+"\\repeat.png";
            repeatbtn.setIcon(new ImageIcon(image));
        }
    }//GEN-LAST:event_repeatbtnMouseClicked

    private void apptitleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_apptitleMousePressed
        // TODO add your handling code here:
        xMouse=evt.getX();
        yMouse=evt.getY();
    }//GEN-LAST:event_apptitleMousePressed

    private void apptitleMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_apptitleMouseDragged
        // TODO add your handling code here:
        int x=evt.getXOnScreen();
        int y=evt.getYOnScreen();
        
        this.setLocation(x-xMouse, y-yMouse);
    }//GEN-LAST:event_apptitleMouseDragged

    private void quitbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quitbtnMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_quitbtnMouseClicked

    private void settingbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingbtnMouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Your setting dialog will be popup here");
    }//GEN-LAST:event_settingbtnMouseClicked

    private void openbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openbtnMouseClicked
        // TODO add your handling code here:
        JFileChooser openFileChooser=new JFileChooser(currentDirectory);
        openFileChooser.setFileFilter(new FileTypeFilter(".mp3","Open mp3 Files only!"));
        int result=openFileChooser.showOpenDialog(null);
        if(result==JFileChooser.APPROVE_OPTION)
        {
            songFile=openFileChooser.getSelectedFile();
            player.addToPlayList(songFile);
            player.skipForward();
            currentDirectory=songFile.getAbsolutePath();
            songNameDisplay.setText("Playing Now..."+songFile.getName());
            
        }
    }//GEN-LAST:event_openbtnMouseClicked

    private void apptitleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_apptitleMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2)
        {
            if(windowcollapsed==false)
            {
                windowcollapsed=true;
                this.setSize(new Dimension(this.getSize().width, 50));
                apptitle.setFont(new Font("Nirmala UI",0,12));
                apptitle.setName("Playing Now...."+songFile.getName());
                
            }
            else if(windowcollapsed==true)
            {
                windowcollapsed=false;
                this.setSize(new Dimension(this.getSize().width, 250));
                apptitle.setFont(new Font("Nirmala UI",0,18));
                apptitle.setName(appName);
            }
        }
    }//GEN-LAST:event_apptitleMouseClicked

    private void volumedownbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_volumedownbtnMouseClicked
        // TODO add your handling code here:
        volumeDownControl(0.1);
    }//GEN-LAST:event_volumedownbtnMouseClicked

    private void volumeupbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_volumeupbtnMouseClicked
        // TODO add your handling code here:
        volumeUpControl(0.1);
    }//GEN-LAST:event_volumeupbtnMouseClicked

    private void volumefullbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_volumefullbtnMouseClicked
        // TODO add your handling code here:
        volumeControl(1.0);
    }//GEN-LAST:event_volumefullbtnMouseClicked

    private void mutebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mutebtnMouseClicked
        // TODO add your handling code here:
        volumeControl(0.0);
    }//GEN-LAST:event_mutebtnMouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(playerframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(playerframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(playerframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(playerframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new playerframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel apptitle;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JPanel mainpanel;
    private javax.swing.JLabel mutebtn;
    private javax.swing.JLabel openbtn;
    private javax.swing.JLabel pausebtn;
    private javax.swing.JLabel playbtn;
    private javax.swing.JLabel quitbtn;
    private javax.swing.JLabel repeatbtn;
    private javax.swing.JLabel settingbtn;
    private javax.swing.JLabel songNameDisplay;
    private javax.swing.JPanel songnamemainPanel;
    private javax.swing.JLabel stopebtn;
    private javax.swing.JLabel volumedownbtn;
    private javax.swing.JLabel volumefullbtn;
    private javax.swing.JLabel volumeupbtn;
    // End of variables declaration//GEN-END:variables
        private MP3Player mP3Player(){
           MP3Player mP3Player=new MP3Player();
           return mP3Player;
        }

         private void volumeDownControl(Double valueToPlusMinus){
        // Get Mixer Information From AudioSystem
        Mixer.Info[] mixers = AudioSystem.getMixerInfo();
        // Now use a for loop to list all mixers
        for(Mixer.Info mixerInfo : mixers){
            // Get Mixer
            Mixer mixer = AudioSystem.getMixer(mixerInfo);
            // Now Get Target Line
            Line.Info[] lineInfos = mixer.getTargetLineInfo();
            // Here again use for loop to list lines
            for(Line.Info lineInfo : lineInfos){
                // Make a null line
                Line line = null;
                // Make a boolean as opened
                boolean opened = true;
                // Now use try exception for opening a line
                try{
                    line = mixer.getLine(lineInfo);
                    opened = line.isOpen() || line instanceof Clip;
                    // Now Check If Line Is not Opened
                    if(!opened){
                        // Open Line
                        line.open();
                    }
                    // Make a float control
                    FloatControl volControl = (FloatControl) line.getControl(FloatControl.Type.VOLUME);
                    // Get Current Volume Now
                    float currentVolume = volControl.getValue();
                    // Make a temp double variable and store valuePlusMinus
                    Double volumeToCut = valueToPlusMinus;
                    // Make a float and calculate the addition or subtraction in volume
                    float changedCalc = (float) ((float)currentVolume-(double)volumeToCut);
                    // Now Set This Changed Value Into Volume Line.
                    volControl.setValue(changedCalc);
                    
                }catch (LineUnavailableException lineException){
                }catch (IllegalArgumentException illException){
                }finally{
                    // Close Line If it opened
                    if(line != null && !opened){
                        line.close();
                    }
                }
            }
        }
    }
         
          private void volumeUpControl(Double valueToPlusMinus){
        // Get Mixer Information From AudioSystem
        Mixer.Info[] mixers = AudioSystem.getMixerInfo();
        // Now use a for loop to list all mixers
        for(Mixer.Info mixerInfo : mixers){
            // Get Mixer
            Mixer mixer = AudioSystem.getMixer(mixerInfo);
            // Now Get Target Line
            Line.Info[] lineInfos = mixer.getTargetLineInfo();
            // Here again use for loop to list lines
            for(Line.Info lineInfo : lineInfos){
                // Make a null line
                Line line = null;
                // Make a boolean as opened
                boolean opened = true;
                // Now use try exception for opening a line
                try{
                    line = mixer.getLine(lineInfo);
                    opened = line.isOpen() || line instanceof Clip;
                    // Now Check If Line Is not Opened
                    if(!opened){
                        // Open Line
                        line.open();
                    }
                    // Make a float control
                    FloatControl volControl = (FloatControl) line.getControl(FloatControl.Type.VOLUME);
                    // Get Current Volume Now
                    float currentVolume = volControl.getValue();
                    // Make a temp double variable and store valuePlusMinus
                    Double volumeToCut = valueToPlusMinus;
                    // Make a float and calculate the addition or subtraction in volume
                    float changedCalc = (float) ((float)currentVolume+(double)volumeToCut);
                    // Now Set This Changed Value Into Volume Line.
                    volControl.setValue(changedCalc);
                    
                }catch (LineUnavailableException lineException){
                }catch (IllegalArgumentException illException){
                }finally{
                    // Close Line If it opened
                    if(line != null && !opened){
                        line.close();
                    }
                }
            }
        }
    }
          
           private void volumeControl(Double valueToPlusMinus){
        // Get Mixer Information From AudioSystem
        Mixer.Info[] mixers = AudioSystem.getMixerInfo();
        // Now use a for loop to list all mixers
        for(Mixer.Info mixerInfo : mixers){
            // Get Mixer
            Mixer mixer = AudioSystem.getMixer(mixerInfo);
            // Now Get Target Line
            Line.Info[] lineInfos = mixer.getTargetLineInfo();
            // Here again use for loop to list lines
            for(Line.Info lineInfo : lineInfos){
                // Make a null line
                Line line = null;
                // Make a boolean as opened
                boolean opened = true;
                // Now use try exception for opening a line
                try{
                    line = mixer.getLine(lineInfo);
                    opened = line.isOpen() || line instanceof Clip;
                    // Now Check If Line Is not Opened
                    if(!opened){
                        // Open Line
                        line.open();
                    }
                    // Make a float control
                    FloatControl volControl = (FloatControl) line.getControl(FloatControl.Type.VOLUME);
                    // Get Current Volume Now
                    float currentVolume = volControl.getValue();
                    // Make a temp double variable and store valuePlusMinus
                    Double volumeToCut = valueToPlusMinus;
                    // Make a float and calculate the addition or subtraction in volume
                    float changedCalc = (float) ((double)volumeToCut);
                    // Now Set This Changed Value Into Volume Line.
                    volControl.setValue(changedCalc);
                    
                }catch (LineUnavailableException lineException){
                }catch (IllegalArgumentException illException){
                }finally{
                    // Close Line If it opened
                    if(line != null && !opened){
                        line.close();
                    }
                }
            }
        }
    }
}
